services:
  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - ./contData:/var/lib/postgresql/data
      - ./tests:/app/tests
    environment:
      POSTGRES_PASSWORD: example
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy

  front:
    build: ../front
    restart: always
    ports:
      - 3000:3000
    depends_on:
      back:
        condition: service_healthy
    volumes:
      - ../front/src/:/app/src/

  back:
    build: ./
    ports:
      - 5050:5050
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: npm run dev
    volumes:
      - ./src/:/app/src/
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:5050'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 2s
      timeout: 10s
      retries: 5
      start_period: 2s

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025
      - 8025:8025
